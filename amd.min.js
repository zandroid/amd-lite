/**
 * AMD lite implementation 2.0.0
 * https://github.com/zandroid/amd-lite
 *
 * Copyright (c) 2014 Andrey Zaytsev
 * MIT License
 *
 */
!function(a,b){"use strict";function c(){}function d(a){console.log('Module "'+a+" is built")}function e(a,b){var c=l;(a.done||a.then).call(a,function(a){c===l&&(b.exports=a,f.verbose&&d(b.name),i(b.name))})}function f(a,c,g){var i,l,m;if(a===!0?(a=c,c=[],i=!0):arguments.length<3&&(g=c,c=b,i=!g||"function"!=typeof g&&!g.then),m=!i&&!!g.then,"string"!=typeof a)throw new Error("Module name is not a string");if(a in j)throw new Error('Redefinition of module "'+a+'"');if(i||m)c=b;else if(!Array.isArray(c))if("string"==typeof c)c=c.split(" ");else{if(c!==b)throw new Error("Dependencies argument is not an array");c=i?[]:["require","exports","module"]}l=j[a]={name:a,dependencies:c,thenable:m},i?l.exports=g:m?e(g,l):l.module=g,f.verbose&&(console.log('Module "'+a+'" is defined'),i&&d(a)),(a in k||f.lazy===!1)&&h([],l)}function g(a,d){var e;if(1===arguments.length&&"string"==typeof a){if(f.verbose&&console.log('Module "'+a+'" is required'),e=j[a],!e)throw new Error('Module "'+a+'" is not defined');if(!h([],e))throw new Error('Module "'+a+'" cannot be built');return e.exports}if("string"==typeof a)a=Array.prototype.slice.call(arguments),d="string"!=typeof a[a.length-1]?a.pop():c;else if(!Array.isArray(a))throw new Error("Dependencies argument is not an array");if(f.verbose&&console.log('Modules collection [ "'+a.join('", "')+'" ] is required'),d===b)d=c;else if("function"!=typeof d)throw new Error("Callback argument is not a function");return h([],{name:"require",dependencies:a,module:d}),b}function h(a,c){var l,m,n=c.name,o="require"!==n,p=!1;if("exports"in c)return i(n),c;if(c.thenable)return b;if(o&&(p=a.indexOf(n)>-1,a=a.concat([n])),p)throw new Error("Cyclic dependency: "+a.join(" > "));if(f.verbose&&o&&console.log('Trying to build module "'+n+'", stack: '+a.join(" > ")),m=[],l={id:n,exports:{}},p=c.dependencies.every(function(d,e){switch(d){case"require":e=g;break;case"module":e=l;break;case"exports":e=l.exports;break;default:if(e=j[d],e&&(e=h(a,e),e=e&&e.exports),e===b)return f.verbose&&console.log(o?'Module "'+n+'" awaits for "'+d+'"':'Module "'+d+'" is awaited'),e=k[d],e?-1===e.targets.indexOf(c)&&e.targets.push(c):k[d]={targets:[c]},!1}return m.push(e),!0})){if(p=c.module.apply(l,m),p===b&&(p=l.exports),!p||!p.then)return c.exports=p,f.verbose&&o&&d(n),i(n),c;c.thenable=!0,e(p,c)}return b}function i(a){var b;a in k&&(b=k[a].targets,delete k[a],b.forEach(h.bind(null,[])))}var j={},k={},l=Date.now();f.amd={},f._modules=j,f._expected=k,f.verbose=!1,f.asis=function(a,b){f(!0,a,b)},f.required=function(a){g([a]),f.apply(this,arguments)},f.clean=function(){f._modules=j={},f._expected=k={},f._session=l=Date.now(),f.verbose&&console.log("AMD list is clean")},f.require=g,a.AMD={define:f,require:g,namespace:function(a){a=a||{},a.define=f,a.require=g}}}(this);