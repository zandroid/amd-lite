/**
 * AMD lite implementation 1.0.4
 * https://github.com/zandroid/amd-lite
 *
 * Copyright (c) 2014 Andrey Zaytsev
 * MIT License
 *
 */
!function(a,b){"use strict";function c(){}function d(a,c,e){var g,j;if(a===!0?(a=c,c=[],g=!0):arguments.length<3&&(e=c,c=b,g="function"!=typeof e),"string"!=typeof a)throw new Error("Module name is not a string");if(a in h)throw new Error('Redefinition of module "'+a+'"');if(!Array.isArray(c))if("string"==typeof c)c=c.split(" ");else{if(c!==b)throw new Error("Dependencies argument is not an array");c=g?[]:["require","exports","module"]}j=h[a]={name:a,dependencies:c},j[g?"exports":"module"]=e,d.verbose&&(console.log('Module "'+a+'" is defined'),g&&console.log('Module "'+a+'" is built')),(a in i||d.lazy===!1)&&f([],j)}function e(a,e){var g;if(1===arguments.length&&"string"==typeof a){if(d.verbose&&console.log('Module "'+a+'" is required'),g=h[a],!g)throw new Error('Module "'+a+'" is not defined');if(!f([],g))throw new Error('Module "'+a+'" cannot be built');return g.exports}if("string"==typeof a)a=Array.prototype.slice.call(arguments),e="string"!=typeof a[a.length-1]?a.pop():c;else if(!Array.isArray(a))throw new Error("Dependencies argument is not an array");if(d.verbose&&console.log('Modules collection [ "'+a.join('", "')+'" ] is required'),e===b)e=c;else if("function"!=typeof e)throw new Error("Callback argument is not a function");return f([],{name:"require",dependencies:a,module:e}),b}function f(a,c){var j,k,l=c.name,m="require"!==l,n=!1;if("exports"in c)return g(l),c;if(m&&(n=a.indexOf(l)>-1,a=a.concat([l])),n)throw new Error("Cyclic dependency: "+a.join(" > "));return d.verbose&&m&&console.log('Trying to build module "'+l+'", stack: '+a.join(" > ")),k=[],j={id:l,exports:{}},n=c.dependencies.every(function(g,n){switch(g){case"require":n=e;break;case"module":n=j;break;case"exports":n=j.exports;break;default:if(n=h[g],n&&(n=f(a,n),n=n&&n.exports),n===b)return d.verbose&&console.log(m?'Module "'+l+'" awaits for "'+g+'"':'Module "'+g+'" is awaited'),n=i[g],n?-1===n.targets.indexOf(c)&&n.targets.push(c):i[g]={targets:[c]},!1}return k.push(n),!0}),n?(n=c.module.apply(j,k),c.exports=n!==b?n:j.exports,d.verbose&&m&&console.log('Module "'+l+" is built"),g(l),c):b}function g(a){var b;a in i&&(b=i[a].targets,delete i[a],b.forEach(f.bind(null,[])))}var h={},i={};d.amd={},d._modules=h,d._expected=i,d.verbose=!1,d.asis=function(a,b){d(!0,a,b)},d.required=function(a){e([a]),d.apply(this,arguments)},d.clean=function(){d._modules=h={},d._expected=i={},d.verbose&&console.log("AMD list is clean")},d.require=e,a.AMD={define:d,require:e,namespace:function(a){a=a||{},a.define=d,a.require=e}}}(this);