/**
 * AMD lite implementation 1.0.2
 * https://github.com/zandroid/amd-lite
 *
 * Copyright (c) 2014 Andrey Zaytsev
 * MIT License
 *
 */
!function(a,b){"use strict";function c(){}function d(a,c,e){var i,j;if(a===!0?(a=c,c=[],i=!0):arguments.length<3&&(e=c,c=b,i="function"!=typeof e),"string"!=typeof a)throw new Error("Module name is not a string");if(a in g)throw new Error('Redefinition of module "'+a+'"');if(!Array.isArray(c))if("string"==typeof c)c=c.split(" ");else{if(c!==b)throw new Error("Dependencies argument is not an array");c=i?[]:["require","exports","module"]}j=g[a]={name:a,dependencies:c},j[i?"exports":"module"]=e,d.verbose&&(console.log('Module "'+a+'" is defined'),i&&console.log('Module "'+a+'" is built')),(a in h||d.lazy===!1)&&f([],j)}function e(a,e){var h;if(1===arguments.length&&"string"==typeof a){if(d.verbose&&console.log('Module "'+a+'" is required'),h=g[a],!h)throw new Error('Module "'+a+'" is not defined');if(!f([],h))throw new Error('Module "'+a+'" cannot be built');return h.exports}if("string"==typeof a)a=Array.prototype.slice.call(arguments),e="string"!=typeof a[a.length-1]?a.pop():c;else if(!Array.isArray(a))throw new Error("Dependencies argument is not an array");if(d.verbose&&console.log('Modules collection [ "'+a.join('", "')+'" ] is required'),e===b)e=c;else if("function"!=typeof e)throw new Error("Callback argument is not a function");return f([],{name:"require",dependencies:a,module:e}),b}function f(a,c){var i,j,k=c.name,l="require"!==k,m=!1;if("exports"in c)return c;if(l&&(m=a.indexOf(k)>-1,a=a.concat([k])),m)throw new Error("Cyclic dependency: "+a.join(" > "));return d.verbose&&l&&console.log('Trying to build module "'+k+'", stack: '+a.join(" > ")),j=[],i={id:k,exports:{}},m=c.dependencies.every(function(m,n){switch(m){case"require":n=e;break;case"module":n=i;break;case"exports":n=i.exports;break;default:if(n=g[m],n&&(n=f(a,n),n=n&&n.exports),n===b)return d.verbose&&console.log(l?'Module "'+k+'" awaits for "'+m+'"':'Module "'+m+'" is awaited'),n=h[m],n?-1===n.targets.indexOf(c)&&n.targets.push(c):h[m]={targets:[c]},!1}return j.push(n),!0}),m?(m=c.module.apply(i,j),c.exports=m!==b?m:i.exports,d.verbose&&l&&console.log('Module "'+k+" is built"),k in h&&(m=h[k].targets,m.forEach(f.bind(null,[])),delete h[k]),c):b}var g={},h={};d.amd={},d._modules=g,d._expected=h,d.verbose=!1,d.asis=function(a,b){d(!0,a,b)},d.clean=function(){d._modules=g={},d._expected=h={},d.verbose&&console.log("AMD list is clean")},d.require=e,a.AMD={define:d,require:e,namespace:function(a){a=a||{},a.define=d,a.require=e}}}(this);